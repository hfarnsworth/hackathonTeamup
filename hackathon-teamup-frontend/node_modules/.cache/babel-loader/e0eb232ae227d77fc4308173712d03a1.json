{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/containers/TeamsContainer.js\";\nimport React from 'react';\nimport Team from '../components/Team.js';\nimport SideTeams from '../components/SideTeams.js';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nconst TeamsContainer = ({\n  teams\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TeamsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SideTeams, {\n    teams: teams,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }));\n}; // long-hand way of writing mstp function:\n// const mapStateToProps = state => {\n//   return {\n//     cars: state.cars\n//   }\n// }\n// I could also use destructuring and arrow function implicit return:\n\n\nconst mapStateToProps = ({\n  teams\n}) => ({\n  teams\n});\n\nexport default connect(mapStateToProps)(TeamsContainer);","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/containers/TeamsContainer.js"],"names":["React","Team","SideTeams","connect","Switch","Route","TeamsContainer","teams","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAClC,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaH,CAdD,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAMC,eAAe,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,MAAgB;AAAEA,EAAAA;AAAF,CAAhB,CAAxB;;AAEA,eAAeJ,OAAO,CAACK,eAAD,CAAP,CAAyBF,cAAzB,CAAf","sourcesContent":["import React from 'react'\nimport Team from '../components/Team.js'\nimport SideTeams from '../components/SideTeams.js'\nimport { connect } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\nconst TeamsContainer = ({ teams }) => {\n    return (\n      <div className=\"TeamsContainer\">\n        <SideTeams teams={teams} />\n\n        {/* <Switch>\n          <Route exact path=\"/teams/:id\" render={(routerProps)=> {\n            const team = teams.find(team => team.id === parseInt(routerProps.match.params.id))\n            return <Team {...routerProps} team={team}/>\n          }}/>\n        </Switch> */}\n\n      </div>\n    )\n}\n\n// long-hand way of writing mstp function:\n// const mapStateToProps = state => {\n//   return {\n//     cars: state.cars\n//   }\n// }\n\n// I could also use destructuring and arrow function implicit return:\nconst mapStateToProps = ({ teams }) => ({ teams })\n\nexport default connect(mapStateToProps)(TeamsContainer)"]},"metadata":{},"sourceType":"module"}