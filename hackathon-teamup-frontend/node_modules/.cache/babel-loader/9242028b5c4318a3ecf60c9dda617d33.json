{"ast":null,"code":"const API = \"http://localhost:3000/\";\nconst teamMembersAPI = API + \"team_members/\";\n\nconst addTeamToMember = (collaboratorID, team) => ({\n  type: \"ADD_TEAM_TO_COLLABORATOR\",\n  collaboratorID,\n  team\n});\n\nconst addMemberToTeam = (teamID, collaborator) => ({\n  type: \"ADD_COLLABORATOR_TO_TEAM\",\n  teamID,\n  collaborator\n});\n\nexport const createTeamMember = (collaborator, team) => {\n  return dispatch => {\n    const body = {\n      team_id: `${team.id}`,\n      collaborator_id: `${collaborator.id}`\n    };\n    return fetch(teamMembersAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(r => r.json()).then(teamMember => {\n      if (teamMember.error) {\n        alert(teamMember.error);\n      } else {\n        dispatch(addTeamToMember(teamMember.collaborator_id, team));\n        dispatch(addMemberToTeam(teamMember.team_id, collaborator));\n      }\n\n      return teamMember;\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/actions/teamMembers.js"],"names":["API","teamMembersAPI","addTeamToMember","collaboratorID","team","type","addMemberToTeam","teamID","collaborator","createTeamMember","dispatch","body","team_id","id","collaborator_id","fetch","method","headers","JSON","stringify","then","r","json","teamMember","error","alert"],"mappings":"AAAA,MAAMA,GAAG,GAAG,wBAAZ;AACA,MAAMC,cAAc,GAAGD,GAAG,GAAG,eAA7B;;AAEA,MAAME,eAAe,GAAG,CAACC,cAAD,EAAgBC,IAAhB,MAA0B;AAAEC,EAAAA,IAAI,EAAE,0BAAR;AAAoCF,EAAAA,cAApC;AAAoDC,EAAAA;AAApD,CAA1B,CAAxB;;AACA,MAAME,eAAe,GAAG,CAACC,MAAD,EAAQC,YAAR,MAA0B;AAAEH,EAAAA,IAAI,EAAE,0BAAR;AAAoCE,EAAAA,MAApC;AAA4CC,EAAAA;AAA5C,CAA1B,CAAxB;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACD,YAAD,EAAcJ,IAAd,KAAuB;AACrD,SAAOM,QAAQ,IAAI;AACjB,UAAMC,IAAI,GAAG;AACXC,MAAAA,OAAO,EAAG,GAAER,IAAI,CAACS,EAAG,EADT;AAEXC,MAAAA,eAAe,EAAG,GAAEN,YAAY,CAACK,EAAG;AAFzB,KAAb;AAIA,WAAOE,KAAK,CAACd,cAAD,EAAiB;AAC3Be,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFkB;AAM3BN,MAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAeR,IAAf;AANqB,KAAjB,CAAL,CAQJS,IARI,CAQCC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARN,EASJF,IATI,CASCG,UAAU,IAAI;AAClB,UAAIA,UAAU,CAACC,KAAf,EAAsB;AACpBC,QAAAA,KAAK,CAACF,UAAU,CAACC,KAAZ,CAAL;AACD,OAFD,MAEO;AACLd,QAAAA,QAAQ,CAACR,eAAe,CAACqB,UAAU,CAACT,eAAZ,EAA4BV,IAA5B,CAAhB,CAAR;AACAM,QAAAA,QAAQ,CAACJ,eAAe,CAACiB,UAAU,CAACX,OAAZ,EAAoBJ,YAApB,CAAhB,CAAR;AACD;;AACD,aAAOe,UAAP;AACD,KAjBI,CAAP;AAkBD,GAvBD;AAwBD,CAzBM","sourcesContent":["const API = \"http://localhost:3000/\"\nconst teamMembersAPI = API + \"team_members/\"\n\nconst addTeamToMember = (collaboratorID,team) => ({ type: \"ADD_TEAM_TO_COLLABORATOR\", collaboratorID, team })\nconst addMemberToTeam = (teamID,collaborator) => ({ type: \"ADD_COLLABORATOR_TO_TEAM\", teamID, collaborator })\n\nexport const createTeamMember = (collaborator,team) => {\n  return dispatch => {\n    const body = {\n      team_id: `${team.id}`,\n      collaborator_id: `${collaborator.id}`\n    }\n    return fetch(teamMembersAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(teamMember => {\n        if (teamMember.error) {\n          alert(teamMember.error)\n        } else {\n          dispatch(addTeamToMember(teamMember.collaborator_id,team))\n          dispatch(addMemberToTeam(teamMember.team_id,collaborator))\n        }\n        return teamMember\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}