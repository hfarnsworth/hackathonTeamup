{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/containers/CollaboratorsContainer.js\";\nimport React from 'react';\nimport Collaborator from '../components/Collaborator.js';\nimport SideCollabos from '../components/SideCollabos.js';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nconst CollaboratorsContainer = ({\n  collaborators\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CollaboratorsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"Collaborators\"), /*#__PURE__*/React.createElement(SideCollabos, {\n    collaborators: collaborators,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/collaborators/:id\",\n    render: routerProps => {\n      const collaborator = collaborators.find(collaborator => collaborator.id === parseInt(routerProps.match.params.id));\n      return /*#__PURE__*/React.createElement(Collaborator, Object.assign({}, routerProps, {\n        collaborator: collaborator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 20\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  })));\n}; // long-hand way of writing mstp function:\n// const mapStateToProps = state => {\n//   return {\n//     cars: state.cars\n//   }\n// }\n// I could also use destructuring and arrow function implicit return:\n\n\nconst mapStateToProps = ({\n  collaborators\n}) => ({\n  collaborators\n});\n\nexport default connect(mapStateToProps)(CollaboratorsContainer);","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/containers/CollaboratorsContainer.js"],"names":["React","Collaborator","SideCollabos","connect","Switch","Route","CollaboratorsContainer","collaborators","routerProps","collaborator","find","id","parseInt","match","params","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;;AAEA,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAClD,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,YAAD;AAAc,IAAA,aAAa,EAAEA,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,oBAAlB;AAAuC,IAAA,MAAM,EAAGC,WAAD,IAAgB;AAC7D,YAAMC,YAAY,GAAGF,aAAa,CAACG,IAAd,CAAmBD,YAAY,IAAIA,YAAY,CAACE,EAAb,KAAoBC,QAAQ,CAACJ,WAAW,CAACK,KAAZ,CAAkBC,MAAlB,CAAyBH,EAA1B,CAA/D,CAArB;AACA,0BAAO,oBAAC,YAAD,oBAAiBH,WAAjB;AAA8B,QAAA,YAAY,EAAEC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAcH,CAfD,C,CAiBA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAMM,eAAe,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,MAAwB;AAAEA,EAAAA;AAAF,CAAxB,CAAxB;;AAEA,eAAeJ,OAAO,CAACY,eAAD,CAAP,CAAyBT,sBAAzB,CAAf","sourcesContent":["import React from 'react'\nimport Collaborator from '../components/Collaborator.js'\nimport SideCollabos from '../components/SideCollabos.js'\nimport { connect } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\nconst CollaboratorsContainer = ({ collaborators }) => {\n    return (\n      <div className=\"CollaboratorsContainer\">\n        <h3>Collaborators</h3>\n        <SideCollabos collaborators={collaborators} />\n\n        <Switch>\n          <Route exact path=\"/collaborators/:id\" render={(routerProps)=> {\n            const collaborator = collaborators.find(collaborator => collaborator.id === parseInt(routerProps.match.params.id))\n            return <Collaborator{...routerProps} collaborator={collaborator}/>\n          }}/>\n        </Switch>\n\n      </div>\n    )\n}\n\n// long-hand way of writing mstp function:\n// const mapStateToProps = state => {\n//   return {\n//     cars: state.cars\n//   }\n// }\n\n// I could also use destructuring and arrow function implicit return:\nconst mapStateToProps = ({ collaborators }) => ({ collaborators })\n\nexport default connect(mapStateToProps)(CollaboratorsContainer)"]},"metadata":{},"sourceType":"module"}