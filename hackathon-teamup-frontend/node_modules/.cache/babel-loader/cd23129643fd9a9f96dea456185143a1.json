{"ast":null,"code":"const API = \"http://localhost:3000/\";\nconst teamsAPI = API + \"teams/\";\n\nconst loadTeams = teams => ({\n  type: \"LOAD_TEAMS\",\n  teams\n});\n\nconst addTeam = team => ({\n  type: \"ADD_TEAM\",\n  team\n});\n\nconst removeTeam = team => ({\n  type: \"DELETE_TEAM\",\n  team\n});\n\nconst removeTeamFromCollaborators = collaborator => ({\n  type: \"DELETE_COLLABORATOR_FROM_TEAMS\",\n  collaborator\n});\n\nexport const fetchTeams = () => {\n  return dispatch => {\n    return fetch(teamsAPI).then(resp => resp.json()).then(teams => dispatch(loadTeams(teams)));\n  };\n};\nexport const createTeam = (team, history) => {\n  return dispatch => {\n    const body = {\n      team\n    };\n    return fetch(teamsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(r => r.json()).then(newTeam => {\n      if (!newTeam.id) {\n        alert(JSON.stringify(newTeam));\n      } else {\n        dispatch(addTeam({ ...newTeam,\n          collaborators: []\n        }));\n        history.push('/teams');\n      }\n    });\n  };\n};\nexport const deleteTeam = team => {\n  return dispatch => {\n    return fetch(teamsAPI + team.id, {\n      method: \"DELETE\"\n    }).then(dispatch(removeTeam(team)));\n  };\n};","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/actions/teams.js"],"names":["API","teamsAPI","loadTeams","teams","type","addTeam","team","removeTeam","removeTeamFromCollaborators","collaborator","fetchTeams","dispatch","fetch","then","resp","json","createTeam","history","body","method","headers","JSON","stringify","r","newTeam","id","alert","collaborators","push","deleteTeam"],"mappings":"AAAA,MAAMA,GAAG,GAAG,wBAAZ;AACA,MAAMC,QAAQ,GAAGD,GAAG,GAAG,QAAvB;;AAEA,MAAME,SAAS,GAAGC,KAAK,KAAK;AAAEC,EAAAA,IAAI,EAAE,YAAR;AAAsBD,EAAAA;AAAtB,CAAL,CAAvB;;AAEA,MAAME,OAAO,GAAGC,IAAI,KAAK;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAL,CAApB;;AAEA,MAAMC,UAAU,GAAGD,IAAI,KAAK;AAAEF,EAAAA,IAAI,EAAE,aAAR;AAAuBE,EAAAA;AAAvB,CAAL,CAAvB;;AAEA,MAAME,2BAA2B,GAAGC,YAAY,KAAK;AAACL,EAAAA,IAAI,EAAE,gCAAP;AAAyCK,EAAAA;AAAzC,CAAL,CAAhD;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAACX,QAAD,CAAL,CACJY,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,EAEJF,IAFI,CAECV,KAAK,IACTQ,QAAQ,CAACT,SAAS,CAACC,KAAD,CAAV,CAHL,CAAP;AAKD,GAND;AAOD,CARM;AAUP,OAAO,MAAMa,UAAU,GAAG,CAACV,IAAD,EAAMW,OAAN,KAAkB;AAC1C,SAAON,QAAQ,IAAI;AACjB,UAAMO,IAAI,GAAG;AACXZ,MAAAA;AADW,KAAb;AAGA,WAAOM,KAAK,CAACX,QAAD,EAAW;AACrBkB,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFY;AAMrBF,MAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;AANe,KAAX,CAAL,CAQJL,IARI,CAQCU,CAAC,IAAIA,CAAC,CAACR,IAAF,EARN,EASJF,IATI,CASCW,OAAO,IAAI;AACf,UAAI,CAACA,OAAO,CAACC,EAAb,EAAiB;AACfC,QAAAA,KAAK,CAACL,IAAI,CAACC,SAAL,CAAeE,OAAf,CAAD,CAAL;AACD,OAFD,MAEO;AACLb,QAAAA,QAAQ,CAACN,OAAO,CAAC,EACf,GAAGmB,OADY;AAEfG,UAAAA,aAAa,EAAE;AAFA,SAAD,CAAR,CAAR;AAIAV,QAAAA,OAAO,CAACW,IAAR,CAAa,QAAb;AACD;AACF,KAnBI,CAAP;AAoBD,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAMC,UAAU,GAAGvB,IAAI,IAAI;AAChC,SAAOK,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAACX,QAAQ,GAAGK,IAAI,CAACmB,EAAjB,EAAqB;AAC/BN,MAAAA,MAAM,EAAE;AADuB,KAArB,CAAL,CAGNN,IAHM,CAGDF,QAAQ,CAACJ,UAAU,CAACD,IAAD,CAAX,CAHP,CAAP;AAID,GALD;AAMD,CAPM","sourcesContent":["const API = \"http://localhost:3000/\"\nconst teamsAPI = API + \"teams/\"\n\nconst loadTeams = teams => ({ type: \"LOAD_TEAMS\", teams })\n\nconst addTeam = team => ({ type: \"ADD_TEAM\", team })\n\nconst removeTeam = team => ({ type: \"DELETE_TEAM\", team })\n\nconst removeTeamFromCollaborators = collaborator => ({type: \"DELETE_COLLABORATOR_FROM_TEAMS\", collaborator })\n\nexport const fetchTeams = () => {\n  return dispatch => {\n    return fetch(teamsAPI)\n      .then(resp => resp.json())\n      .then(teams => \n        dispatch(loadTeams(teams))\n      )\n  }\n}\n\nexport const createTeam = (team,history) => {\n  return dispatch => {\n    const body = {\n      team\n    }\n    return fetch(teamsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(newTeam => {\n        if (!newTeam.id) {\n          alert(JSON.stringify(newTeam))\n        } else {\n          dispatch(addTeam({\n            ...newTeam,\n            collaborators: []\n          }))\n          history.push('/teams')\n        }\n      })\n  }\n}\n\nexport const deleteTeam = team => {\n  return dispatch => {\n    return fetch(teamsAPI + team.id, {\n      method: \"DELETE\"\n    })\n    .then(dispatch(removeTeam(team)))\n  }\n}"]},"metadata":{},"sourceType":"module"}