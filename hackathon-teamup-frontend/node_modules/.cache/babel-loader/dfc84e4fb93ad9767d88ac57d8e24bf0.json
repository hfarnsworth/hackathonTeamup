{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCollaborators } from './actions/collaborators';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      console.log(this.props.loading);\n\n      if (this.props.loading) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 14\n          }\n        }, \"Loading...\");\n      } else {\n        return /*#__PURE__*/React.createElement(CatList, {\n          catPics: this.props.catPics,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchCollaborators();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, \"Hackathon Teamup\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    collaborators: state.collaborators,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCollaborators: () => dispatch(fetchCollaborators())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/App.js"],"names":["React","Component","connect","fetchCollaborators","App","handleLoading","console","log","props","loading","catPics","componentDidMount","render","mapStateToProps","state","collaborators","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAO1BI,aAP0B,GAOV,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,OAAvB;;AACA,UAAG,KAAKD,KAAL,CAAWC,OAAd,EAAuB;AACrB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFD,MAEO;AACL,4BAAO,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAdyB;AAAA;;AAE1BC,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWL,kBAAX;AACD;;AAWDS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,CADF;AAOD;;AAxByB;;AA2B5B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,aAAa,EAAED,KAAK,CAACC,aADhB;AAELN,IAAAA,OAAO,EAAEK,KAAK,CAACL;AAFV,GAAP;AAID,CALD;;AAOA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLd,IAAAA,kBAAkB,EAAE,MAAMc,QAAQ,CAACd,kBAAkB,EAAnB;AAD7B,GAAP;AAGD,CAJD;;AAKA,eAAeD,OAAO,CAACW,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCollaborators } from './actions/collaborators';\n\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    console.log(this.props)\n    this.props.fetchCollaborators()\n  }\n\n  handleLoading = () => {\n    console.log(this.props.loading)\n    if(this.props.loading) {\n      return <div>Loading...</div>\n    } else {\n      return <CatList catPics={this.props.catPics} />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Hackathon Teamup</h1>\n        </header>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    collaborators: state.collaborators,\n    loading: state.loading\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCollaborators: () => dispatch(fetchCollaborators())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}