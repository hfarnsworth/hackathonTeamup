{"ast":null,"code":"export const loadTeams = teams => ({\n  type: \"LOAD_TEAMS\",\n  teams\n});\nexport const addTeam = team => ({\n  type: \"ADD_TEAM\",\n  team\n});\nexport const fetchTeams = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/teams\").then(resp => resp.json()).then(teams => {\n      if (teams.error) {\n        alert(teams.error);\n      } else {\n        console.log(teams);\n        dispatch(loadTeams(teams));\n      }\n    });\n  };\n};\nexport const createTeam = team => {\n  return dispatch => {\n    const body = {\n      team\n    };\n    return fetch(\"http://localhost:3000/teams\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(r => r.json()).then(newTeam => {\n      if (newTeam.error) {\n        alert(newTeam.error);\n      } else {\n        dispatch(addTeam(newTeam));\n      }\n\n      return newTeam;\n    });\n  };\n};\nexport const deleteTeam = teamId => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/teams/${teamId}`, {\n      method: \"DELETE\"\n    }).then(r => r.json()).then(team => {\n      dispatch({\n        type: \"DELETE_TEAM\",\n        payload: team\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/actions/teams.js"],"names":["loadTeams","teams","type","addTeam","team","fetchTeams","dispatch","fetch","then","resp","json","error","alert","console","log","createTeam","body","method","headers","JSON","stringify","r","newTeam","deleteTeam","teamId","payload"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAGC,KAAK,KAAK;AAAEC,EAAAA,IAAI,EAAE,YAAR;AAAsBD,EAAAA;AAAtB,CAAL,CAAvB;AAEP,OAAO,MAAME,OAAO,GAAGC,IAAI,KAAK;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAL,CAApB;AAEP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,6BAAD,CAAL,CACJC,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,EAEJF,IAFI,CAECP,KAAK,IAAI;AACb,UAAIA,KAAK,CAACU,KAAV,EAAiB;AACfC,QAAAA,KAAK,CAACX,KAAK,CAACU,KAAP,CAAL;AACD,OAFD,MAEO;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACAK,QAAAA,QAAQ,CAACN,SAAS,CAACC,KAAD,CAAV,CAAR;AACD;AACF,KATI,CAAP;AAUD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMc,UAAU,GAAIX,IAAD,IAAU;AAClC,SAAOE,QAAQ,IAAI;AACjB,UAAMU,IAAI,GAAG;AACXZ,MAAAA;AADW,KAAb;AAGA,WAAOG,KAAK,CAAC,6BAAD,EAAgC;AAC1CU,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFiC;AAM1CF,MAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;AANoC,KAAhC,CAAL,CAQJR,IARI,CAQCa,CAAC,IAAIA,CAAC,CAACX,IAAF,EARN,EASJF,IATI,CASCc,OAAO,IAAI;AACf,UAAIA,OAAO,CAACX,KAAZ,EAAmB;AACjBC,QAAAA,KAAK,CAACU,OAAO,CAACX,KAAT,CAAL;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,CAACH,OAAO,CAACmB,OAAD,CAAR,CAAR;AACD;;AACD,aAAOA,OAAP;AACD,KAhBI,CAAP;AAiBD,GArBD;AAsBD,CAvBM;AAyBP,OAAO,MAAMC,UAAU,GAAIC,MAAD,IAAY;AACpC,SAAOlB,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAE,+BAA8BiB,MAAO,EAAvC,EAA0C;AACpDP,MAAAA,MAAM,EAAE;AAD4C,KAA1C,CAAL,CAGJT,IAHI,CAGCa,CAAC,IAAIA,CAAC,CAACX,IAAF,EAHN,EAIJF,IAJI,CAICJ,IAAI,IAAI;AACZE,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAE,aADC;AAEPuB,QAAAA,OAAO,EAAErB;AAFF,OAAD,CAAR;AAID,KATI,CAAP;AAUD,GAXD;AAYD,CAbM","sourcesContent":["export const loadTeams = teams => ({ type: \"LOAD_TEAMS\", teams })\n\nexport const addTeam = team => ({ type: \"ADD_TEAM\", team })\n\nexport const fetchTeams = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/teams\")\n      .then(resp => resp.json())\n      .then(teams => {\n        if (teams.error) {\n          alert(teams.error)\n        } else {\n          console.log(teams)\n          dispatch(loadTeams(teams))\n        }\n      })\n  }\n}\n\nexport const createTeam = (team) => {\n  return dispatch => {\n    const body = {\n      team\n    }\n    return fetch(\"http://localhost:3000/teams\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(newTeam => {\n        if (newTeam.error) {\n          alert(newTeam.error)\n        } else {\n          dispatch(addTeam(newTeam))\n        }\n        return newTeam\n      })\n  }\n}\n\nexport const deleteTeam = (teamId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/teams/${teamId}`, {\n      method: \"DELETE\"\n    })\n      .then(r => r.json())\n      .then(team => {\n        dispatch({\n          type: \"DELETE_TEAM\",\n          payload: team\n        })\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}