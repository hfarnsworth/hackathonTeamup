{"ast":null,"code":"export const loadCollaborators = collaborators => ({\n  type: \"LOAD_COLLABORATORS\",\n  collaborators\n});\nexport const addCollaborator = collaborator => ({\n  type: \"ADD_COLLABORATOR\",\n  collaborator\n});\nexport const fetchTeams = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/collaborators\").then(resp => resp.json()).then(collaborators => {\n      if (collaborators.error) {\n        alert(collaborators.error);\n      } else {\n        dispatch(loadCollaborators(collaborators));\n      }\n    });\n  };\n};\nexport const createCollaborator = collaborator => {\n  return dispatch => {\n    const body = {\n      team\n    };\n    return fetch(\"http://localhost:3000/collaborators\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(r => r.json()).then(newCollaborator => {\n      if (newCollaborator.error) {\n        alert(newCollaborator.error);\n      } else {\n        dispatch(addCollaborator(newCollaborator));\n      }\n\n      return newCollaborator;\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/actions/collaborators.js"],"names":["loadCollaborators","collaborators","type","addCollaborator","collaborator","fetchTeams","dispatch","fetch","then","resp","json","error","alert","createCollaborator","body","team","method","headers","JSON","stringify","r","newCollaborator"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAGC,aAAa,KAAK;AAAEC,EAAAA,IAAI,EAAE,oBAAR;AAA8BD,EAAAA;AAA9B,CAAL,CAAvC;AAEP,OAAO,MAAME,eAAe,GAAGC,YAAY,KAAK;AAAEF,EAAAA,IAAI,EAAE,kBAAR;AAA4BE,EAAAA;AAA5B,CAAL,CAApC;AAEP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,qCAAD,CAAL,CACJC,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,EAEJF,IAFI,CAECP,aAAa,IAAI;AACrB,UAAIA,aAAa,CAACU,KAAlB,EAAyB;AACvBC,QAAAA,KAAK,CAACX,aAAa,CAACU,KAAf,CAAL;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,CAACN,iBAAiB,CAACC,aAAD,CAAlB,CAAR;AACD;AACF,KARI,CAAP;AASD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMY,kBAAkB,GAAIT,YAAD,IAAkB;AAClD,SAAOE,QAAQ,IAAI;AACjB,UAAMQ,IAAI,GAAG;AACXC,MAAAA;AADW,KAAb;AAGA,WAAOR,KAAK,CAAC,qCAAD,EAAwC;AAClDS,MAAAA,MAAM,EAAE,MAD0C;AAElDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFyC;AAMlDH,MAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAN4C,KAAxC,CAAL,CAQJN,IARI,CAQCY,CAAC,IAAIA,CAAC,CAACV,IAAF,EARN,EASJF,IATI,CASCa,eAAe,IAAI;AACvB,UAAIA,eAAe,CAACV,KAApB,EAA2B;AACzBC,QAAAA,KAAK,CAACS,eAAe,CAACV,KAAjB,CAAL;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,CAACH,eAAe,CAACkB,eAAD,CAAhB,CAAR;AACD;;AACD,aAAOA,eAAP;AACD,KAhBI,CAAP;AAiBD,GArBD;AAsBD,CAvBM","sourcesContent":["export const loadCollaborators = collaborators => ({ type: \"LOAD_COLLABORATORS\", collaborators })\n\nexport const addCollaborator = collaborator => ({ type: \"ADD_COLLABORATOR\", collaborator })\n\nexport const fetchTeams = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3000/collaborators\")\n      .then(resp => resp.json())\n      .then(collaborators => {\n        if (collaborators.error) {\n          alert(collaborators.error)\n        } else {\n          dispatch(loadCollaborators(collaborators))\n        }\n      })\n  }\n}\n\nexport const createCollaborator = (collaborator) => {\n  return dispatch => {\n    const body = {\n      team\n    }\n    return fetch(\"http://localhost:3000/collaborators\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(newCollaborator => {\n        if (newCollaborator.error) {\n          alert(newCollaborator.error)\n        } else {\n          dispatch(addCollaborator(newCollaborator))\n        }\n        return newCollaborator\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}