{"ast":null,"code":"export default ((state = [], action) => {\n  let idx;\n  let teams = [];\n\n  switch (action.type) {\n    case \"LOAD_TEAMS\":\n      return action.teams;\n\n    case \"ADD_TEAM\":\n      return state.concat(action.team);\n\n    case \"DELETE_TEAM\":\n      return state.filter(team => team !== action.team);\n\n    case \"ADD_COLLABORATOR_TO_TEAM\":\n      idx = state.findIndex(team => team.id === action.teamID);\n      teams = state(idx).teams;\n      return [...state.slice(0, idx), { ...state[idx],\n        teams: [...teams, action.team]\n      }, ...state.slice(idx + 1)];\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/reducers/teams.js"],"names":["state","action","idx","teams","type","concat","team","filter","findIndex","id","teamID","slice"],"mappings":"AAAA,gBAAe,CAACA,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AACnC,MAAIC,GAAJ;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,UAAQF,MAAM,CAACG,IAAf;AACE,SAAK,YAAL;AACE,aAAOH,MAAM,CAACE,KAAd;;AACF,SAAK,UAAL;AACE,aAAOH,KAAK,CAACK,MAAN,CAAaJ,MAAM,CAACK,IAApB,CAAP;;AACF,SAAK,aAAL;AACE,aAAON,KAAK,CAACO,MAAN,CAAaD,IAAI,IAAIA,IAAI,KAAKL,MAAM,CAACK,IAArC,CAAP;;AACF,SAAK,0BAAL;AACEJ,MAAAA,GAAG,GAAGF,KAAK,CAACQ,SAAN,CAAgBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAaR,MAAM,CAACS,MAA5C,CAAN;AACAP,MAAAA,KAAK,GAAGH,KAAK,CAACE,GAAD,CAAL,CAAWC,KAAnB;AACA,aAAO,CACL,GAAGH,KAAK,CAACW,KAAN,CAAY,CAAZ,EAAeT,GAAf,CADE,EAEL,EACG,GAAGF,KAAK,CAACE,GAAD,CADX;AAEGC,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAWF,MAAM,CAACK,IAAlB;AAFV,OAFK,EAML,GAAGN,KAAK,CAACW,KAAN,CAAYT,GAAG,GAAG,CAAlB,CANE,CAAP;;AAQF;AACE,aAAOF,KAAP;AAnBJ;AAqBD,CAxBD","sourcesContent":["export default (state=[], action) => {\n  let idx;\n  let teams = [];\n  switch (action.type) {\n    case \"LOAD_TEAMS\":\n      return action.teams\n    case \"ADD_TEAM\":\n      return state.concat(action.team)\n    case \"DELETE_TEAM\":\n      return state.filter(team => team !== action.team)\n    case \"ADD_COLLABORATOR_TO_TEAM\":\n      idx = state.findIndex(team => team.id  === action.teamID);\n      teams = state(idx).teams;\n      return [\n        ...state.slice(0, idx),\n        {\n           ...state[idx],\n           teams: [...teams, action.team],\n        },\n        ...state.slice(idx + 1),\n     ]\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}