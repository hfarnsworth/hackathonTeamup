{"ast":null,"code":"const API = \"http://localhost:3000/\";\nconst teamsAPI = API + \"teams/\";\n\nconst loadTeams = teams => ({\n  type: \"LOAD_TEAMS\",\n  teams\n});\n\nconst addTeam = team => ({\n  type: \"ADD_TEAM\",\n  team\n});\n\nconst removeTeam = team => ({\n  type: \"DELETE_TEAM\",\n  team\n});\n\nexport const fetchTeams = () => {\n  return dispatch => {\n    return fetch(teamsAPI).then(resp => resp.json()).then(teams => {\n      if (teams.error) {\n        alert(teams.error);\n      } else {\n        console.log(teams);\n        dispatch(loadTeams(teams));\n      }\n    });\n  };\n};\nexport const createTeam = team => {\n  return dispatch => {\n    const body = {\n      team\n    };\n    return fetch(teamsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(r => r.json()).then(newTeam => {\n      if (newTeam.error) {\n        alert(newTeam.error);\n      } else {\n        dispatch(addTeam(newTeam));\n      }\n\n      return newTeam;\n    });\n  };\n};\nexport const deleteTeam = team => {\n  return dispatch => {\n    return fetch(teamsAPI + team.id, {\n      method: \"DELETE\"\n    }).then(dispatch(removeTeam(team)));\n  };\n};","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/actions/teams.js"],"names":["API","teamsAPI","loadTeams","teams","type","addTeam","team","removeTeam","fetchTeams","dispatch","fetch","then","resp","json","error","alert","console","log","createTeam","body","method","headers","JSON","stringify","r","newTeam","deleteTeam","id"],"mappings":"AAAA,MAAMA,GAAG,GAAG,wBAAZ;AACA,MAAMC,QAAQ,GAAGD,GAAG,GAAG,QAAvB;;AAEA,MAAME,SAAS,GAAGC,KAAK,KAAK;AAAEC,EAAAA,IAAI,EAAE,YAAR;AAAsBD,EAAAA;AAAtB,CAAL,CAAvB;;AAEA,MAAME,OAAO,GAAGC,IAAI,KAAK;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBE,EAAAA;AAApB,CAAL,CAApB;;AAEA,MAAMC,UAAU,GAAGD,IAAI,KAAK;AAAEF,EAAAA,IAAI,EAAE,aAAR;AAAuBE,EAAAA;AAAvB,CAAL,CAAvB;;AAEA,OAAO,MAAME,UAAU,GAAG,MAAM;AAC9B,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAACT,QAAD,CAAL,CACJU,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,EAEJF,IAFI,CAECR,KAAK,IAAI;AACb,UAAIA,KAAK,CAACW,KAAV,EAAiB;AACfC,QAAAA,KAAK,CAACZ,KAAK,CAACW,KAAP,CAAL;AACD,OAFD,MAEO;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAM,QAAAA,QAAQ,CAACP,SAAS,CAACC,KAAD,CAAV,CAAR;AACD;AACF,KATI,CAAP;AAUD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMe,UAAU,GAAGZ,IAAI,IAAI;AAChC,SAAOG,QAAQ,IAAI;AACjB,UAAMU,IAAI,GAAG;AACXb,MAAAA;AADW,KAAb;AAGA,WAAOI,KAAK,CAACT,QAAD,EAAW;AACrBmB,MAAAA,MAAM,EAAE,MADa;AAErBC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFY;AAMrBF,MAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;AANe,KAAX,CAAL,CAQJR,IARI,CAQCa,CAAC,IAAIA,CAAC,CAACX,IAAF,EARN,EASJF,IATI,CASCc,OAAO,IAAI;AACf,UAAIA,OAAO,CAACX,KAAZ,EAAmB;AACjBC,QAAAA,KAAK,CAACU,OAAO,CAACX,KAAT,CAAL;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,CAACJ,OAAO,CAACoB,OAAD,CAAR,CAAR;AACD;;AACD,aAAOA,OAAP;AACD,KAhBI,CAAP;AAiBD,GArBD;AAsBD,CAvBM;AAyBP,OAAO,MAAMC,UAAU,GAAGpB,IAAI,IAAI;AAChC,SAAOG,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAACT,QAAQ,GAAGK,IAAI,CAACqB,EAAjB,EAAqB;AAC/BP,MAAAA,MAAM,EAAE;AADuB,KAArB,CAAL,CAGNT,IAHM,CAGDF,QAAQ,CAACF,UAAU,CAACD,IAAD,CAAX,CAHP,CAAP;AAID,GALD;AAMD,CAPM","sourcesContent":["const API = \"http://localhost:3000/\"\nconst teamsAPI = API + \"teams/\"\n\nconst loadTeams = teams => ({ type: \"LOAD_TEAMS\", teams })\n\nconst addTeam = team => ({ type: \"ADD_TEAM\", team })\n\nconst removeTeam = team => ({ type: \"DELETE_TEAM\", team })\n\nexport const fetchTeams = () => {\n  return dispatch => {\n    return fetch(teamsAPI)\n      .then(resp => resp.json())\n      .then(teams => {\n        if (teams.error) {\n          alert(teams.error)\n        } else {\n          console.log(teams)\n          dispatch(loadTeams(teams))\n        }\n      })\n  }\n}\n\nexport const createTeam = team => {\n  return dispatch => {\n    const body = {\n      team\n    }\n    return fetch(teamsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(newTeam => {\n        if (newTeam.error) {\n          alert(newTeam.error)\n        } else {\n          dispatch(addTeam(newTeam))\n        }\n        return newTeam\n      })\n  }\n}\n\nexport const deleteTeam = team => {\n  return dispatch => {\n    return fetch(teamsAPI + team.id, {\n      method: \"DELETE\"\n    })\n    .then(dispatch(removeTeam(team)))\n  }\n}"]},"metadata":{},"sourceType":"module"}