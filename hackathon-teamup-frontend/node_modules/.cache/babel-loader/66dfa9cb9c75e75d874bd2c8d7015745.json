{"ast":null,"code":"const API = \"http://localhost:3000/\";\nconst collaboratorsAPI = API + \"collaborators/\";\n\nconst loadCollaborators = collaborators => ({\n  type: \"LOAD_COLLABORATORS\",\n  collaborators\n});\n\nconst addCollaborator = collaborator => ({\n  type: \"ADD_COLLABORATOR\",\n  collaborator\n});\n\nexport const fetchCollaborators = () => {\n  return dispatch => {\n    return fetch(collaboratorsAPI).then(resp => resp.json()).then(collaborators => {\n      if (collaborators.error) {\n        alert(collaborators.error);\n      } else {\n        console.log(collaborators);\n        dispatch(loadCollaborators(collaborators));\n      }\n    });\n  };\n};\nexport const createCollaborator = collaborator => {\n  return dispatch => {\n    const body = {\n      collaborator\n    };\n    return fetch(collaboratorsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(r => r.json()).then(newCollaborator => {\n      if (newCollaborator.error) {\n        alert(newCollaborator.error);\n      } else {\n        dispatch(addCollaborator(newCollaborator));\n      }\n\n      return newCollaborator;\n    });\n  };\n};\nexport const deleteCollaborator = collaborator => {\n  return dispatch => {\n    return fetch(collaboratorsAPI + collaborator.id, {\n      method: \"DELETE\"\n    }).then(dispatch({\n      type: \"DELETE_COLLABORATOR\",\n      payload: collaborator\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/actions/collaborators.js"],"names":["API","collaboratorsAPI","loadCollaborators","collaborators","type","addCollaborator","collaborator","fetchCollaborators","dispatch","fetch","then","resp","json","error","alert","console","log","createCollaborator","body","method","headers","JSON","stringify","r","newCollaborator","deleteCollaborator","id","payload"],"mappings":"AAAA,MAAMA,GAAG,GAAG,wBAAZ;AACA,MAAMC,gBAAgB,GAAGD,GAAG,GAAG,gBAA/B;;AAEA,MAAME,iBAAiB,GAAGC,aAAa,KAAK;AAAEC,EAAAA,IAAI,EAAE,oBAAR;AAA8BD,EAAAA;AAA9B,CAAL,CAAvC;;AAEA,MAAME,eAAe,GAAGC,YAAY,KAAK;AAAEF,EAAAA,IAAI,EAAE,kBAAR;AAA4BE,EAAAA;AAA5B,CAAL,CAApC;;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACtC,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAACR,gBAAD,CAAL,CACJS,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,EAEJF,IAFI,CAECP,aAAa,IAAI;AACrB,UAAIA,aAAa,CAACU,KAAlB,EAAyB;AACvBC,QAAAA,KAAK,CAACX,aAAa,CAACU,KAAf,CAAL;AACD,OAFD,MAEO;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AACAK,QAAAA,QAAQ,CAACN,iBAAiB,CAACC,aAAD,CAAlB,CAAR;AACD;AACF,KATI,CAAP;AAUD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMc,kBAAkB,GAAIX,YAAD,IAAkB;AAClD,SAAOE,QAAQ,IAAI;AACjB,UAAMU,IAAI,GAAG;AACXZ,MAAAA;AADW,KAAb;AAGA,WAAOG,KAAK,CAACR,gBAAD,EAAmB;AAC7BkB,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFoB;AAM7BF,MAAAA,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;AANuB,KAAnB,CAAL,CAQJR,IARI,CAQCa,CAAC,IAAIA,CAAC,CAACX,IAAF,EARN,EASJF,IATI,CASCc,eAAe,IAAI;AACvB,UAAIA,eAAe,CAACX,KAApB,EAA2B;AACzBC,QAAAA,KAAK,CAACU,eAAe,CAACX,KAAjB,CAAL;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,CAACH,eAAe,CAACmB,eAAD,CAAhB,CAAR;AACD;;AACD,aAAOA,eAAP;AACD,KAhBI,CAAP;AAiBD,GArBD;AAsBD,CAvBM;AAyBP,OAAO,MAAMC,kBAAkB,GAAInB,YAAD,IAAkB;AAClD,SAAOE,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAACR,gBAAgB,GAAGK,YAAY,CAACoB,EAAjC,EAAqC;AAC/CP,MAAAA,MAAM,EAAE;AADuC,KAArC,CAAL,CAGJT,IAHI,CAGCF,QAAQ,CAAC;AACbJ,MAAAA,IAAI,EAAE,qBADO;AAEbuB,MAAAA,OAAO,EAAErB;AAFI,KAAD,CAHT,CAAP;AAOD,GARD;AASD,CAVM","sourcesContent":["const API = \"http://localhost:3000/\"\nconst collaboratorsAPI = API + \"collaborators/\"\n\nconst loadCollaborators = collaborators => ({ type: \"LOAD_COLLABORATORS\", collaborators })\n\nconst addCollaborator = collaborator => ({ type: \"ADD_COLLABORATOR\", collaborator })\n\nexport const fetchCollaborators = () => {\n  return dispatch => {\n    return fetch(collaboratorsAPI)\n      .then(resp => resp.json())\n      .then(collaborators => {\n        if (collaborators.error) {\n          alert(collaborators.error)\n        } else {\n          console.log(collaborators)\n          dispatch(loadCollaborators(collaborators))\n        }\n      })\n  }\n}\n\nexport const createCollaborator = (collaborator) => {\n  return dispatch => {\n    const body = {\n      collaborator\n    }\n    return fetch(collaboratorsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(newCollaborator => {\n        if (newCollaborator.error) {\n          alert(newCollaborator.error)\n        } else {\n          dispatch(addCollaborator(newCollaborator))\n        }\n        return newCollaborator\n      })\n  }\n}\n\nexport const deleteCollaborator = (collaborator) => {\n  return dispatch => {\n    return fetch(collaboratorsAPI + collaborator.id, {\n      method: \"DELETE\"\n    })\n      .then(dispatch({\n        type: \"DELETE_COLLABORATOR\",\n        payload: collaborator\n      }))\n  }\n}"]},"metadata":{},"sourceType":"module"}