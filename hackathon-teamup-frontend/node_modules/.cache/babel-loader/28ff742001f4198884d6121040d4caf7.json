{"ast":null,"code":"var _jsxFileName = \"/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/components/NewTeam.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createTeam } from '../actions/teams';\nimport { withRouter } from 'react-router-dom';\nimport ErrorMessage from './ErrorMessage.js';\n\nclass NewTeam extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      description: '',\n      error: ''\n    };\n\n    this.handleOnChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleOnSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        error: ''\n      });\n      const teamExists = this.props.teams.filter(team => team.name.toLowerCase() === this.state.name.toLowerCase());\n      console.log(teamExists);\n\n      if (this.state.name === '' || this.state.description === '') {\n        this.setState({\n          error: \"field(s) must not be left blank\"\n        });\n      } else if (teamExists) {\n        this.setState({\n          error: \"only one team may use this name\"\n        });\n      } else {\n        this.props.createTeam({\n          name: this.state.name,\n          description: this.state.description\n        }, this.props.history);\n        this.setState({\n          name: '',\n          description: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"newTeam\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"New Team\"), /*#__PURE__*/React.createElement(ErrorMessage, {\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }\n    }, \"Team Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      onChange: this.handleOnChange,\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 39\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }\n    }, \"Project Description:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"description\",\n      type: \"text\",\n      onChange: this.handleOnChange,\n      value: this.state.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      onSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  teams\n}) => ({\n  teams\n});\n\nexport default withRouter(connect(mapStateToProps, {\n  createTeam\n})(NewTeam));","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/components/NewTeam.js"],"names":["React","Component","connect","createTeam","withRouter","ErrorMessage","NewTeam","state","name","description","error","handleOnChange","e","setState","target","value","handleOnSubmit","preventDefault","teamExists","props","teams","filter","team","toLowerCase","console","log","history","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { createTeam } from '../actions/teams';\nimport { withRouter } from 'react-router-dom';\nimport ErrorMessage from './ErrorMessage.js';\n\nclass NewTeam extends Component {\n  state = {\n    name: '',\n    description: '',\n    error: '',\n  };\n\n  handleOnChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n    this.setState({\n      error: '',\n    })\n    const teamExists = this.props.teams.filter(team =>\n      team.name.toLowerCase() === this.state.name.toLowerCase())\n      console.log(teamExists)\n    if (this.state.name === ''|| this.state.description === '') {\n      this.setState({\n        error: \"field(s) must not be left blank\"\n      })\n    } else if (teamExists) {\n      this.setState({\n        error: \"only one team may use this name\"\n      })\n    } else {\n      this.props.createTeam({\n        name: this.state.name,\n        description: this.state.description\n      },this.props.history)\n      this.setState({\n        name: '',\n        description: ''\n      })\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"newTeam\">\n        <h2>New Team</h2>\n        <ErrorMessage error={this.state.error} />\n        <form onSubmit={this.handleOnSubmit} >\n          <p><label>Team Name:</label><input name=\"name\" type=\"text\" onChange={this.handleOnChange} value={this.state.name} /></p>\n          <p><label>Project Description:</label><input name=\"description\" type=\"text\" onChange={this.handleOnChange} value={this.state.description} /></p>\n          <input type=\"submit\" onSubmit={this.handleOnSubmit} />\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ teams }) => ({ teams })\n\nexport default withRouter(connect(mapStateToProps,{ createTeam })(NewTeam))"]},"metadata":{},"sourceType":"module"}