{"ast":null,"code":"import history from '../history.js';\nconst API = \"http://localhost:3000/\";\nconst collaboratorsAPI = API + \"collaborators/\";\n\nconst loadCollaborators = collaborators => ({\n  type: \"LOAD_COLLABORATORS\",\n  collaborators\n});\n\nconst addCollaborator = collaborator => ({\n  type: \"ADD_COLLABORATOR\",\n  collaborator\n});\n\nconst removeCollaborator = collaborator => ({\n  type: \"DELETE_COLLABORATOR\",\n  collaborator\n});\n\nexport const fetchCollaborators = () => {\n  return dispatch => {\n    return fetch(collaboratorsAPI).then(resp => resp.json()).then(collaborators => dispatch(loadCollaborators(collaborators)));\n  };\n};\nexport const createCollaborator = collaborator => {\n  return dispatch => {\n    const body = {\n      collaborator\n    };\n    console.log(collaborator);\n    return fetch(collaboratorsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(r => r.json()).then(newCollaborator => {\n      if (!newCollaborator.id) {\n        alert(JSON.stringify(newCollaborator));\n      } else {\n        dispatch(addCollaborator({ ...newCollaborator,\n          teams: []\n        }));\n        history.push(`/collaborators/:${newCollaborator.id}`);\n      }\n    });\n  };\n};\nexport const deleteCollaborator = collaborator => {\n  return dispatch => {\n    return fetch(collaboratorsAPI + collaborator.id, {\n      method: \"DELETE\"\n    }).then(dispatch(removeCollaborator(collaborator)));\n  };\n};","map":{"version":3,"sources":["/Users/mymac/Development/code/hackathon-teamup/hackathon-teamup-frontend/src/actions/collaborators.js"],"names":["history","API","collaboratorsAPI","loadCollaborators","collaborators","type","addCollaborator","collaborator","removeCollaborator","fetchCollaborators","dispatch","fetch","then","resp","json","createCollaborator","body","console","log","method","headers","JSON","stringify","r","newCollaborator","id","alert","teams","push","deleteCollaborator"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,eAApB;AAEA,MAAMC,GAAG,GAAG,wBAAZ;AACA,MAAMC,gBAAgB,GAAGD,GAAG,GAAG,gBAA/B;;AAEA,MAAME,iBAAiB,GAAGC,aAAa,KAAK;AAAEC,EAAAA,IAAI,EAAE,oBAAR;AAA8BD,EAAAA;AAA9B,CAAL,CAAvC;;AAEA,MAAME,eAAe,GAAGC,YAAY,KAAK;AAAEF,EAAAA,IAAI,EAAE,kBAAR;AAA4BE,EAAAA;AAA5B,CAAL,CAApC;;AAEA,MAAMC,kBAAkB,GAAGD,YAAY,KAAK;AAACF,EAAAA,IAAI,EAAE,qBAAP;AAA8BE,EAAAA;AAA9B,CAAL,CAAvC;;AAEA,OAAO,MAAME,kBAAkB,GAAG,MAAM;AACtC,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAACT,gBAAD,CAAL,CACJU,IADI,CACCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADT,EAEJF,IAFI,CAECR,aAAa,IACjBM,QAAQ,CAACP,iBAAiB,CAACC,aAAD,CAAlB,CAHL,CAAP;AAKD,GAND;AAOD,CARM;AAUP,OAAO,MAAMW,kBAAkB,GAAGR,YAAY,IAAI;AAChD,SAAOG,QAAQ,IAAI;AACjB,UAAMM,IAAI,GAAG;AACXT,MAAAA;AADW,KAAb;AAGAU,IAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AACA,WAAOI,KAAK,CAACT,gBAAD,EAAmB;AAC7BiB,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFoB;AAM7BJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AANuB,KAAnB,CAAL,CAQJJ,IARI,CAQCW,CAAC,IAAIA,CAAC,CAACT,IAAF,EARN,EASJF,IATI,CASCY,eAAe,IAAI;AACvB,UAAI,CAACA,eAAe,CAACC,EAArB,EAAyB;AACvBC,QAAAA,KAAK,CAACL,IAAI,CAACC,SAAL,CAAeE,eAAf,CAAD,CAAL;AACD,OAFD,MAEO;AACLd,QAAAA,QAAQ,CAACJ,eAAe,CAAC,EACvB,GAAGkB,eADoB;AAEvBG,UAAAA,KAAK,EAAE;AAFgB,SAAD,CAAhB,CAAR;AAIA3B,QAAAA,OAAO,CAAC4B,IAAR,CAAc,mBAAkBJ,eAAe,CAACC,EAAG,EAAnD;AACD;AACF,KAnBI,CAAP;AAoBD,GAzBD;AA0BD,CA3BM;AA6BP,OAAO,MAAMI,kBAAkB,GAAGtB,YAAY,IAAI;AAChD,SAAOG,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAACT,gBAAgB,GAAGK,YAAY,CAACkB,EAAjC,EAAqC;AAC/CN,MAAAA,MAAM,EAAE;AADuC,KAArC,CAAL,CAGNP,IAHM,CAGDF,QAAQ,CAACF,kBAAkB,CAACD,YAAD,CAAnB,CAHP,CAAP;AAID,GALD;AAMD,CAPM","sourcesContent":["import history from '../history.js';\n\nconst API = \"http://localhost:3000/\"\nconst collaboratorsAPI = API + \"collaborators/\"\n\nconst loadCollaborators = collaborators => ({ type: \"LOAD_COLLABORATORS\", collaborators })\n\nconst addCollaborator = collaborator => ({ type: \"ADD_COLLABORATOR\", collaborator })\n\nconst removeCollaborator = collaborator => ({type: \"DELETE_COLLABORATOR\", collaborator })\n\nexport const fetchCollaborators = () => {\n  return dispatch => {\n    return fetch(collaboratorsAPI)\n      .then(resp => resp.json())\n      .then(collaborators => \n        dispatch(loadCollaborators(collaborators))\n      )\n  }\n}\n\nexport const createCollaborator = collaborator => {\n  return dispatch => {\n    const body = {\n      collaborator\n    }\n    console.log(collaborator)\n    return fetch(collaboratorsAPI, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(r => r.json())\n      .then(newCollaborator => {\n        if (!newCollaborator.id) {\n          alert(JSON.stringify(newCollaborator))\n        } else {\n          dispatch(addCollaborator({\n            ...newCollaborator,\n            teams: [],\n          }))\n          history.push(`/collaborators/:${newCollaborator.id}`)\n        }\n      })\n  }\n}\n\nexport const deleteCollaborator = collaborator => {\n  return dispatch => {\n    return fetch(collaboratorsAPI + collaborator.id, {\n      method: \"DELETE\"\n    })\n    .then(dispatch(removeCollaborator(collaborator)))\n  }\n}"]},"metadata":{},"sourceType":"module"}